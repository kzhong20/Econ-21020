quantile(satgpa$sat_sum,probs = (0.1,0.25,0.01))
quantile(satgpa$sat_sum, probs = (0.1,0.25,0.01))
summary(satgpa$sat_sum)
mean(satgpa$sat_sum)
sd(satgpa$sat_sum)
meanval= mean(satgpa$sat_sum)
sdval = sd(satgpa$sat_sum)
.1*sdval+meanval
.1*sdval+meanval
.25*sdval+meanval
.5*sdval+meanval
.75*sdval+meanval
.9*sdval+meanval
qnorm(c(.1,.25,.5,.75,.9))
pZ=(1:1000)/(1001)
pZ=(1:1000)/(1001)
qn=qnorm(pZ)
sZ= c(104.7577, 106.9008, 110.4727, 114.0445, 116.1876)
sZ= c(104.7577, 106.9008, 110.4727, 114.0445, 116.1876)
qplot(sZ, qn)
library(tidyverse)
library(lattice)
library("openintro")
qplot(sZ, qn)
qn
library("openintro")
source("~/.active-rstudio-document", echo=TRUE)
quantile = quantile (satgpa$sat_sum, probs = c(.1,.25,.5,.75,.9))
m = mean(satgpa$sat_sum)
sd = sd(sastgpa$sat_sum)
Z = (quantile-mean)/sd
sd = sd(sasgpa$sat_sum)
Z = (quantile-mean)/sd
sd = sd(satgpa$sat_sum)
Z = (quantile-mean)/sd
Z = (quantile-m)/sd
Z = (quantile_value-m)/sd
quantile_value = quantile (satgpa$sat_sum, probs = c(.1,.25,.5,.75,.9))
Z = (quantile_value-m)/sd
Z
qnorm(c(.1,.25,.5,.75,.9))
pZ=(1:1000)/(1001)
qn=qnorm(pZ)
pZ=(1:1000)/(1001)
qn=qnorm(pZ)
sZ = sort(satgpa$sat_sum)
qplot(sZ,qn)
qplot(qn,sZ)
qplot(qn,sZ,xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qplot(qn,sZ,xlab = "Theoretical Quantiles", ylab = "Sample Quantiles", main = "QQ Plot By Hand")
plot(qn,sZ,xlab = "Theoretical Quantiles", ylab = "Sample Quantiles", main = "QQ Plot By Hand")
qqnorm(Z)
qqnorm(satgpa$sat_sum)
library(openintro)
normTail(m=506, s=15.91)
abline(v=1012*.46)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# sampling distribution of xbar
hist(xbar, probability=T, nclass = 20, main="Histogram of xbar, df = 1");
# sampling distribution of xbar
hist(xbar, probability=T, nclass = 20, main="Histogram of xbar, df = 2");
nv = 2;
nv = 3;
nv = 10;
lines(xnorm, ynorm, col=2)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
boxplot(xbar, probability=T, nclass = 20, main="Boxplot of xbar, df = 2")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
num.rejected1 <- sum(pvalue1 <= alpha);
source("~/.active-rstudio-document", echo=TRUE)
library(openintro)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# part (c) - generate histogram and boxplot of the sample means.
library(mosaic)
source("~/.active-rstudio-document", echo=TRUE)
pvalue <- 2 * (1 - pnorm( abs(zstat)));
# part (b) - check some numerical summaries
favstats(xbar);
zbar <- (xbar - mu0) / (sigma/sqrt(n));
pvalue <- 2 * (1 - pnorm( abs(zstat)));
library(openintro)
#set up simulation constants
# sample size
n = 12
# significance level
alpha <- 0.05
# true population mean
mu <- 25
2
# population sd
sigma <- 4
# population mean under H_0
mu0 = 25;
# num of simulated data
num.simulations <- 1000
# Simulating data: step 1-6
xbar <- replicate(num.simulations, mean(rnorm(n, mu, sigma)));
SDxbar <- sigma/sqrt(n);
zstar <- -qnorm(alpha/2);
lower <- xbar - zstar * SDxbar;
upper <- xbar + zstar * SDxbar;
zstat <- (xbar - mu0) / SDxbar;
pvalue <- 2 * (1 - pnorm( abs(zstat)));
# part (b) - check some numerical summaries
favstats(xbar);
zbar <- (xbar - mu0) / (sigma/sqrt(n));
zbar <- (xbar - mu0) / (sigma/sqrt(n));
# part (b) - check some numerical summaries
favstats(xbar);
zbar <- (xbar - mu0) / (sigma/sqrt(n));
favstats(zbar)
zbar <- (xbar - mu0) / (sigma/sqrt(n));
favstats(zbar)
# part (c) - generate histogram and boxplot of the sample means.
library(mosaic)
# part (d)
#sort the sample means
#SortedNormalSimulations <- data.frame(NormalSimulations[order(xbar),]);
#attach(SortedNormalSimulations);
# smallest 50 xbars
#head( SortedNormalSimulations, 50);
# largest 50 xbars
#tail( SortedNormalSimulations, 50);
num.lower = sum(mu < lower);
num.upper = sum(mu > upper);
num.total = num.lower + num.upper;
num.lower
num.upper
histogram(xbar, bins = 15, color = "white");
# part (c) - generate histogram and boxplot of the sample means.
library(mosaic)
bwplot(xbar);
# part (c) - generate histogram and boxplot of the sample means.
library(openintro)
histogram(xbar, bins = 15, color = "white");
bwplot(xbar);
#set up simulation constants
# sample size
n = 12
# part (c) - generate histogram and boxplot of the sample means.
library(openintro)
histogram(xbar, bins = 15, color = "white");
bwplot(xbar);
install.packages("mosaic", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(backports)
# part (c) - generate histogram and boxplot of the sample means.
library(mosaic)
# part (c) - generate histogram and boxplot of the sample means.
library(mosaic);
histogram(xbar, bins = 15, color = "white");
library(lattice)
library(tidyverse)
# part (c) - generate histogram and boxplot of the sample means.
library(mosaic)
histogram(xbar, bins = 15, color = "white");
bwplot(xbar);
histogram(xbar, bins = 15, color = "white");
bwplot(xbar);
histogram(xbar, bins = 15, color = "white");
bwplot(xbar);
# part (e) - num of times rejecting H_0: mu = 25
num.rejected <- sum(pvalue <= alpha);
num.rejected
num.rejected1 <- sum(pvalue1 <= alpha);
# part (f) -
mu1 <- 27
zstat1 <- (xbar - mu1) / SDxbar;
pvalue1 <- 2 * (1 - pnorm( abs(zstat1)));
num.rejected1 <- sum(pvalue1 <= alpha);
num.rejected1
pt(q=-3.3,df=25,lower.tail = TRUE)
2*pt(q=-3.3,df=25,lower.tail = TRUE)
2*pt(-3.303,df=50)
2*pt(q=-3.303,df=50,lower.tail = TRUE)
source("~/.active-rstudio-document", echo=TRUE)
rain = read.table("rainfalls.txt", h=T)
library(lattice)
rain = read.table("rainfalls.txt", h=T)
library(openintro)
rain = read.table("rainfalls.txt", h=T)
library(lattice)
bwplot(Rainfall ~ Treatment, data=rain)
rain = read.table("rainfalls.txt", h=T)
rain = read.table("rainfalls.txt", h=T)
library(lattice)
bwplot(Rainfall ~ Treatment, data=rain)
rain = read.table("rainfalls.txt", h=T)
rain = read.table("rainfalls.txt", h=T)
library(mosaic)
library(mosaic)
rain = read.table("rainfalls.txt", h=T)
library(lattice)
bwplot(Rainfall ~ Treatment, data=rain)
source("~/.active-rstudio-document", echo=TRUE)
rain = read.table("rainfalls.txt", h=T)
library(lattice)
bwplot(Rainfall ~ Treatment, data=rain)
rain = read.table("rainfalls.txt", h=T)
rain = read.table("rainfalls.txt", h=T)
rainfalls <- read.csv("~/Downloads/rainfalls.txt", sep="")
View(rainfalls)
rain = read.table("rainfalls.txt", h=T)
rain = read.table("rainfalls.txt", h=T)
rain = read.table("rainfalls.txt", h=T)
rain = read.table("rainfalls.txt", h=T)
pz(3.39)
pz(3.39)
pt(3.39)
source("~/.active-rstudio-document", echo=TRUE)
?bdims
> mylm = lm(hgt~sho.gi, data=bdims)
mylm = lm(hgt~sho.gi, data=bdims)
summary(mylm)
summary(mylm)
mylm = lm(hgt~sho.gi, data=bdims)
data(bdims)
mylm = lm(hgt~sho.gi, data=bdims)
mylm = lm(hgt~sho.gi, data=bdims)
summary(mylm)
source("~/.active-rstudio-document", echo=TRUE)
mylm = lm(hgt~sho_gi, data=bdims)
summary(mylm)
mylm = lm(hgt~sho_gi, data=bdims)
mylm
boxplot(bdims)
pt(.95,24)
2*pt(.05,24)
2*pt(.05,24)
2*pt(.5,24)
2*pt(.25,24)
2*pt(.97.5,24)
2*pt(.975,24)
pt(17.067,51)
pt(17.067,51,lower.tail = FALSE)
pt(-20.54,2253,lower.tail = T)
2*pt(-20.54,2253,lower.tail = T)
2*pt(-20.54,2253)
2*pnorm(-20.54,2253)
pnorm(-20.54)
2*pnorm(-20.54)
2*pt(2.3745,13,lower.tail = F)
2*pt(-3.3,25,lower.tail = T)
pnorm(3.39,lower.tail = F)
pnorm(-.29,lower.tail = T)
pnorm(-.29,lower.tail = T)*2
pnorm(-.29,lower.tail = T)*2
pnorm(24.22)
pnorm(24.22,lower.tail=F)
pt(1.859,6.lower.tail=F)
pt(1.859,6,lower.tail=F)
pt(1.905,17,lower.tail = F)
pt(-4.341,11)
pnorm(1.732, lower.tail = F)
pnorm(1.732, lower.tail = T)
2*pt(-10.714,lower.tail = T)
2*pt(-10.714,82,lower.tail = T)
pt(2300,179,lower.tail = F)
pt(6.84,179,lower.tail = F)
pt(3.16,9,lower.tail = F)
pnorm(6.026, lower.tail = F)
?p
?print
print("hello")
install.packages("AER")
1L
1L
x<-1
length(x)
?rm
?rm
?rm
1L
x<-1
#vectors of size 1
x<-1
length(x)
?rm
percentile <- pnorm(1.5042)
percentile <- pnorm(1.5042)
percentile <- pnorm(1.5042)
pnorm(1.5042)
1-pnorm(1.5042)
(1-pnorm(1.5042))*2
qnorm(.95)
qnorm(.9)
qnorm(.95)
# install packages
library(AER)
library(dplyr)
library(tidyr)
library(ggplot2)
# set up working directory
getwd
setwd("/users/nachtloe/Documents/GitHub/ECON-21020/")
# using data frame
caschool <- read_excel("birthweight_smoking.xlsx")
setwd("/users/nachtloe/Documents/GitHub/ECON-21020/")
# using data frame
caschool <- read_excel("birthweight_smoking.xlsx")
# install packages
library(AER)
library(dplyr)
library(tidyr)
library(ggplot2)
# set up working directory
getwd
setwd("/users/nachtloe/Documents/GitHub/ECON-21020/")
# using data frame
caschool <- read_excel("birthweight_smoking.xlsx")
# using data frame
caschool <- read_excel("caschool.xlsx")
# using data frame
caschool <- read.excel("birthweight_smoking.xlsx")
library("tidyverse")
library(tidyverse)
# set up working directory
getwd
setwd("/users/nachtloe/Documents/GitHub/ECON-21020/")
# using data frame
caschool <- read.excel("birthweight_smoking.xlsx")
library(readxl)
# set up working directory
getwd
setwd("/users/nachtloe/Documents/GitHub/ECON-21020/")
# using data frame
caschool <- read.excel("birthweight_smoking.xlsx")
# using data frame
caschool <- read_excel("birthweight_smoking.xlsx")
# using data frame
birthweight <- read_excel("birthweight_smoking.xlsx")
# Question 7
# (a) Regress Birthweight on Smoker.
# What is the estimated difference in average birthweight for smokers vs. non-smokers?
summary(birthweight)
birthweight.smoker.lm <- lm(birthweight ~ smoker, data = birthweight)
summary(birthweight.smoker.lm)
# (b) Regress Birthweight on Smoker, Alcohol, and Nprevist.
birthweight.smoker.alc.N.lm<-lm(birthweight ~ smoker + alcohol + nprevist,
data = birthweight)
summary(birthweight.smoker.alc.N.lm)
# iii. Use your regression to predict the birth weight of a child whose mother
# smoked, did not drink alcohol, and had 8 prenatal care visits.
birthweight1 <- 3051.249-217.580+34.07*8
print(birthweight1)
# iv. Compute R2 and adjusted R2. Why are they so similar?
summary(birthweight.smoker.alc.N.lm)
View(sample_means50)
# (c) Explain how you could use this dataset to empirically verify the Frisch-
# Waugh Theorem
# Conduct this empirical verification for the regression coefficient on
# Smoker from part (b).
# Step 1:
lm1 <- lm (smoker ~ alcohol + nprevist, data = birthweight)
summary(lm1)
# Store Residual.1:
resid.1 <- resid(lm1)
# Step 2: Regress Birthweight on Alcohol & NPrevist
lm2 <- lm (birthweight ~ alcohol + nprevist, data = birthweight)
resid.2 <- resid(lm2)
# Step 3: Regress Residual2 on Residual1
lm3 <-lm(resid.2 ~ resid.1)
summary(lm3)
# Step 3: Regress Residual2 on Residual1
lm3 <-lm (resid.1 ~ resid.2)
summary(lm3)
# Step 3: Regress Residual2 on Residual1
lm3 <-lm (resid.2 ~ resid.1)
summary(lm3)
# (c) Explain how you could use this dataset to empirically verify the Frisch-
# Waugh Theorem
# Conduct this empirical verification for the regression coefficient on
# Smoker from part (b).
# Step 1: Regress Smoker on Alcohol & NPrevist
lm1 <- lm (smoker ~ alcohol + nprevist, data = birthweight)
# Store Residual1
resid.1 <- resid(lm1)
# Step 2: Regress Birthweight on Alcohol & NPrevist
lm2 <- lm (birthweight ~ alcohol + nprevist, data = birthweight)
# Store Residual2
resid.2 <- resid(lm2)
# Step 3: Regress Residual2 on Residual1
lm3 <-lm (resid.2 ~ resid.1)
summary(lm3)
# Store Residual1
resid.1 <- resid(lm1)
print(presid.1)
print(resid.1)
# (c) Explain how you could use this dataset to empirically verify the Frisch-
# Waugh Theorem
# Conduct this empirical verification for the regression coefficient on
# Smoker from part (b).
# Step 1: Regress Smoker on Alcohol & NPrevist
lm1 <- lm (smoker ~ alcohol + nprevist, data = birthweight)
# Store Residual1
resid.1 <- resid(lm1)
# Step 2: Regress Birthweight on Alcohol & NPrevist
lm2 <- lm (birthweight ~ alcohol + nprevist, data = birthweight)
# Store Residual2
resid.2 <- resid(lm2)
# Step 3: Regress Residual2 on Residual1
lm3 <-lm (resid.2 ~ resid.1)
summary(lm3)
summary(lm3)
# Question 7
# (a) Regress Birthweight on Smoker.
# What is the estimated difference in average birthweight for smokers vs. non-smokers?
summary(data1)
# using data frame
data1 <- read_excel("birthweight_smoking.xlsx")
# Question 7
# (a) Regress Birthweight on Smoker.
# What is the estimated difference in average birthweight for smokers vs. non-smokers?
summary(data1)
birthweight.smoker.lm <- lm(birthweight ~ smoker, data = data1)
summary(birthweight.smoker.lm) # which gives a beta1 = -253.23
# (b) Regress Birthweight on Smoker, Alcohol, and Nprevist.
birthweight.smoker.alc.N.lm <- lm(birthweight ~ smoker + alcohol + nprevist,
data = data1)
summary(birthweight.smoker.alc.N.lm)
# iii. Use your regression to predict the birth weight of a child whose mother
# smoked, did not drink alcohol, and had 8 prenatal care visits.
birthweight1 <- 3051.249-217.580+34.07*8
print(birthweight1) #this gives 3106.229
# iv. Compute R2 and adjusted R2. Why are they so similar?
summary(birthweight.smoker.alc.N.lm)
# (c) Explain how you could use this dataset to empirically verify the Frisch-
# Waugh Theorem
# Conduct this empirical verification for the regression coefficient on
# Smoker from part (b).
# Step 1: Regress Smoker on Alcohol & NPrevist
lm1 <- lm (smoker ~ alcohol + nprevist, data = data1)
# Store Residual1
resid.1 <- resid(lm1)
# Step 2: Regress Birthweight on Alcohol & NPrevist
lm2 <- lm (birthweight ~ alcohol + nprevist, data = data1)
# Store Residual2
resid.2 <- resid(lm2)
# Step 3: Regress Residual2 on Residual1
lm3 <-lm (resid.2 ~ resid.1)
summary(lm3)
# (c) Explain how you could use this dataset to empirically verify the Frisch-
# Waugh Theorem
# Conduct this empirical verification for the regression coefficient on
# Smoker from part (b).
# Step 1: Regress Smoker on Alcohol & NPrevist
lm1 <- lm (smoker ~ alcohol + nprevist, data = data1)
# Store Residual1
resid.1 <- resid(lm1)
# Step 2: Regress Birthweight on Alcohol & NPrevist
lm2 <- lm (birthweight ~ alcohol + nprevist, data = data1)
# Store Residual2
resid.2 <- resid(lm2)
# Step 3: Regress Residual2 on Residual1
lm3 <-lm (resid.2 ~ resid.1)
summary(lm3)
